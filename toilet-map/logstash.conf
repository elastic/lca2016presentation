input {
    stdin {
        type => "toilets"
    }
}

filter {

    mutate {
        gsub => [ "message", "[\r\n]", "" ]
        strip => [ "message" ]
    }
    csv {
        columns => [ "ToiletID","URL","Name","Address1","Town","State","Postcode","AddressNote","Male","Female","Unisex","FacilityType","ToiletType","AccessLimited","PaymentRequired","KeyRequired","AccessNote","Parking","ParkingNote","AccessibleMale","AccessibleFemale","AccessibleUnisex","AccessibleNote","MLAK","ParkingAccessible","AccessibleParkingNote","IsOpen","OpeningHoursSchedule","OpeningHoursNote","BabyChange","Showers","DrinkingWater","SharpsDisposal","SanitaryDisposal","IconURL","IconAltText","Notes","Status","Latitude","Longitude" ]
    }
    if [ToiletID] == "ToiletID" {
        drop { }
    }
    mutate {
        convert => {
            "ToiletID" => "integer"
            "Male" => "boolean"
            "Female" => "boolean"
            "Unisex" => "boolean"
            "AccessLimited" => "boolean"
            "PaymentRequired" => "boolean"
            "KeyRequired" => "boolean"
            "Parking" => "boolean"
            "AccessibleMale" => "boolean"
            "AccessibleFemale" => "boolean"
            "AccessibleUnisex" => "boolean"
            "MLAK" => "boolean"
            "ParkingAccessible" => "boolean"
            "BabyChange" => "boolean"
            "Showers" => "boolean"
            "DrinkingWater" => "boolean"
            "SharpsDisposal" => "boolean"
            "SanitaryDisposal" => "boolean"
            "Latitude" => "float"
            "Longitude" => "float"
        }
    }
    if [Status] == "Verified" {
        mutate {
            add_field => { "Verified" => "true" }
        }
    } else {
        mutate {
            add_field => { "Verified" => "false" }
        }
    }
    mutate {
        convert => { "Verified" => "boolean" }
        remove_field => "Status"
    }
    if [Latitude] and [Longitude] {
        mutate {
            add_field => {
                "[geoip][location]" => [ "%{Longitude}", "%{Latitude}" ]
                # "[geoip][latitude]" => "%{Latitude}"
                # "[geoip][longitude]" => "%{Longitude}"
            }
            remove_field => [ "Latitude", "Longitude" ]
        }
    }
    mutate {
        remove_field => [ "message", "host" ]
    }
}

output {
    elasticsearch {
        index => "public_toilets"
        template => "logstash-template.json"
	template_name => "public_toilets"
	template_overwrite => true
    }
    stdout {
        codec => "dots"
    }
}
