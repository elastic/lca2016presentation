input {
  stdin {
    codec => json_lines
  }
}

filter {
  # Thanks to Jordan for this - https://github.com/elasticsearch/logstash/issues/2131#issuecomment-71952929
  ruby {
    init => "def filter(event, &block); event['[result][records]'].each { |o| yield LogStash::Event.new(o) }; event.cancel; end"
    code => "lol"
  }

  # Fill some null fields
  if [author] == "null" or [author] == "" {
    mutate {
      replace => [ "author", "Unknown" ]
    }
  }
  if [documentType] == "" {
    mutate {
      replace => [ "documentType", "Unknown" ]
    }
  }
  if [resourceUrl] == "" {
    mutate {
      replace => [ "resourceUrl", "Unknown" ]
    }
  }

  # Join lat + lon fields
  mutate {
    add_field => [ "coords", "%{lon}", "tmplat", "%{lat}" ]
  }
  mutate {
    merge => [ "coords", "tmplat" ]
  }
  mutate {
    convert => [ "coords", "float" ]
    remove => [ "tmplat" ]
 }

  # Array events with multiple regions
  mutate {
     split => { "regions" => ";" }
  }

  # Format fields
  mutate {
    convert => [ "Evacuated","integer","Homeless","integer","Injuries","integer","Deaths","integer","Insured Cost","float","Train(s) damaged","integer","Train(s) destroyed","integer","Home(s) damaged","integer","Home(s) destroyed","integer","Building(s) damaged","integer","Building(s) destroyed","integer","IndPremise(s) destroyed","integer","ComPremise(s) damaged","integer","ComPremise(s) destroyed","integer","Bridge(s) damaged","integer","Bridge(s) destroyed","integer","Aircraft damaged","integer","Aircraft destroyed","integer","Motor Vehicle(s) damaged","integer","Motor Vehicle(s) destroyed","integer","Water vessel(s) damaged","integer","Water vessel(s) destroyed","integer","Businesse(s) damaged","integer","Businesse(s) destroyed","integer","Farm(s) damaged","integer","Farm(s) destroyed","integer","Crop(s) destroyed","integer","Livestock destroyed","integer","subjects","integer","Government assistance","integer","title","string","description","string","lon","float","lat","float","id","integer","documentType","string","url","string" ]
  }
  date {
    match => [ "startDate", "ISO8601" ]
    timezone => "Australia/Sydney"
  }
  date {
    match => [ "endDate", "ISO8601" ]
    timezone => "Australia/Sydney"
  }

  # We don't need these
  mutate {
    remove_field => [ "_id", "host" ]
  }
}

output {
  elasticsearch {
    hosts => ["localhost:9200"]
    index => "au-disaster-events"
    document_type => "event"
  }
  stdout {
  #  codec => rubydebug
    codec => dots
  }
}
